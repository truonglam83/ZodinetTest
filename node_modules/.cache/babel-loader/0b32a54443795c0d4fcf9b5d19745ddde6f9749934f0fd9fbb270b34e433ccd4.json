{"ast":null,"code":"var _jsxFileName = \"D:\\\\my-app\\\\src\\\\App.js\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // Question 1\n  // - Giving an API endpoint: https://jsonplaceholder.typicode.com/posts.\n  // - Use JavaScript or TypeScript to write a function that fetches data from this API endpoint.\n  // - Use JavaScript or TypeScript to write a function that creates a new post using this API endpoint.\n  // - (Optional) Create a UI that has 2 buttons: “Fetch” and “Create” that execute the two functions above.\n  // Question 2\n  // - Using object-oriented programming to create a Stack class and its methods: find, push, pop, size, and isEmpty.\n  // Question 3\n  //  - How would you optimize this code to follow clean code principles and best practices in terms of naming conventions, readability, maintainability, and functionality?\n\n  //Question 1:\n  const fetchPosts = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts');\n    const data = await res.json();\n    if (data) {\n      console.log(data);\n    } else {\n      console.log('No data');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","fetchPosts","res","fetch","data","json","console","log"],"sources":["D:/my-app/src/App.js"],"sourcesContent":["import './App.css';\n\nfunction App() {\n// Question 1\n// - Giving an API endpoint: https://jsonplaceholder.typicode.com/posts.\n// - Use JavaScript or TypeScript to write a function that fetches data from this API endpoint.\n// - Use JavaScript or TypeScript to write a function that creates a new post using this API endpoint.\n// - (Optional) Create a UI that has 2 buttons: “Fetch” and “Create” that execute the two functions above.\n// Question 2\n// - Using object-oriented programming to create a Stack class and its methods: find, push, pop, size, and isEmpty.\n// Question 3\n//  - How would you optimize this code to follow clean code principles and best practices in terms of naming conventions, readability, maintainability, and functionality?\n\n\n//Question 1:\nconst fetchPosts = async () => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts');\n  const data = await res.json();\n  if(data){\n    console.log(data);\n  }\n  else{\n    console.log('No data');\n  }\n}\n\n  return (\n    <div className=\"App\">\n      <h1>React App</h1>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAAC;AAEnB,SAASA,GAAG,GAAG;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA,MAAMC,UAAU,GAAG,YAAY;IAC7B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;IACrE,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;IAC7B,IAAGD,IAAI,EAAC;MACNE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB,CAAC,MACG;MACFE,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB;EACF,CAAC;EAEC,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA;EAAK;IAAA;IAAA;IAAA;EAAA,QACd;AAEV;AAAC,KA7BQP,GAAG;AA+BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}